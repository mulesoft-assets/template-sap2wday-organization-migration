<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:workday="http://www.mulesoft.org/schema/mule/workday"
	xmlns:sap="http://www.mulesoft.org/schema/mule/sap" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/sap http://www.mulesoft.org/schema/mule/sap/current/mule-sap.xsd
http://www.mulesoft.org/schema/mule/workday http://www.mulesoft.org/schema/mule/workday/current/mule-workday.xsd">

	<flow name="businessLogicFlow" doc:id="884f86c5-66e1-4701-bb9b-594c2a60abf3">

		<batch:job jobName="migrateObjectsBatch" doc:id="79b373e6-1aeb-43a9-9dfe-8ac0d2f31fdc"
			blockSize="${page.size}">
			<batch:process-records>
				<batch:step name="upsertOrganizationsInWorkdayStep"
					doc:id="78a74ab4-9b91-416d-985a-acda2ac377eb">
					<logger level="INFO" doc:name="Log the organization"
						doc:id="ad8f6822-5cae-456d-a39d-f9d740f71d72" message="Organization to upsert: #[payload]" />
					<ee:transform doc:name="Create AddUpdate request"
						doc:id="539dfb02-5347-46bb-8c89-2fd53d0ff4bb">
						<ee:message>
							<ee:set-payload><![CDATA[output application/xml
ns ns0 urn:com.workday/bsvc
---
{
	ns0#Organization_Add_Update: {
		ns0#Organization_Data : {
			ns0#Availability_Date : now() as DateTime,
			ns0#Integration_ID_Data : {
				ns0#ID @(ns0#"System_ID": p('wday.ext.systemID') ): payload.id
				},
			ns0#Organization_Subtype_Reference : {
				ns0#Organization_Subtype_Name : p('wday.org.subtype')
			},
			ns0#Organization_Code : payload.code,
			ns0#Organization_Name  : payload.name,
			ns0#Organization_Type_Reference   : {
				ns0#Organization_Type_Name : "Company"
			},
			ns0#Organization_Visibility_Reference : {
				ns0#Organization_Visibility_Name : p('wday.org.visibility')
			}
		}
	}
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<workday:human-resources operation="Add_Update_Organization" doc:name="Upsert Workday organization" doc:id="936cb086-c11e-49ad-9ee2-fd9012d6f2f0" config-ref="Workday_Config" />	
					<logger level="INFO" doc:name="Upsert result"
						doc:id="b1ff833e-763d-4241-bf30-69e0e2ce04f0" message="#[output application/json --- payload ]" />
				</batch:step>
			</batch:process-records>
			<batch:on-complete>
				<scatter-gather doc:name="All"
					doc:id="ef2964ef-0b85-4c6c-a5ee-b834df639e7b">
					<route>
						<logger level="INFO" doc:name="Migration process has finished!"
							doc:id="b7575d38-7dbd-4602-9186-1bbb25234896" message="Migration process has finished! #[payload]" />
					</route>
					<route>
						<ee:transform doc:name="Prepare migration result email"
							doc:id="c84b4bc4-5a65-41c1-9d0c-f1ebd3d8db7a">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
 output text/plain
 ---
 "Migration Report: \n"
 
 ++ "\n Time [milliseconds]: " 		++ payload.elapsedTimeInMillis!
 ++ "\n Total Records: "			++ payload.totalRecords!
 ++ "\n Successful Records: "		++ payload.successfulRecords!
 ++ "\n Failed Records: "			++ payload.failedRecords!
 ++ "\n Loaded Records: "			++ payload.loadedRecords!
 ++ "\n Processed Records: " 		++ payload.processedRecords!]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<email:send config-ref="Gmail_SMTP" doc:name="Send migration result email"
							doc:id="5896eaa9-dd10-47a2-a6fc-6319b11dbd06" fromAddress="${mail.from}"
							subject="${mail.subject}">
							<email:to-addresses>
								<email:to-address value="${mail.to}" />
							</email:to-addresses>
						</email:send>
					</route>
				</scatter-gather>

			</batch:on-complete>
		</batch:job>
	</flow>
	<sub-flow name="queryFromSAPSubFlow" doc:id="6a238565-9508-4e93-86f0-dcdd7b25a0ed">
		<ee:transform doc:name="Set XML input" doc:id="15a322b0-102e-4716-b0da-1c05da3e2e4b">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/xml
---
{
  "BAPI_PDOTYPES_GETDETAILEDLIST": {
    "import": {
      "OBJECTTYPE": "O",
      "STARTDATE": p('sap.startDate'),
      "ENDDATE": p('sap.endDate'),
    }
  }
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<sap:execute-synchronous-remote-function-call doc:name="Execute BAPI / Function over sRFC" doc:id="5b08fe8d-f689-4fb1-9a03-61d564cfc863" config-ref="SAP_Outbound" key="/migrateorganizations" />
		<ee:transform doc:name="Convert SAP response to Workday Account" doc:id="a1dc2edd-31bf-4ad8-8575-390625caf768">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload.BAPI_PDOTYPES_GETDETAILEDLIST.tables.OBJECTS.*row map
{
	name: $.LONG_TEXT,
	code: $.SHORT_TEXT,
	id: $.OBJECT_ID
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</sub-flow>
	<flow name="mainFlow" doc:id="7c0a5bef-b3d5-442f-bff3-10d038f69a5e">
		<flow-ref doc:name="Reference to queryFromSAPSubFlow" doc:id="361c9abe-fc4a-4c21-b0e4-6375562ef5da" name="queryFromSAPSubFlow"/>
		<flow-ref doc:name="Reference to businessLogicFlow" doc:id="91360ede-4d71-44c7-9b64-8ee762e04ea0"
			name="businessLogicFlow" />
		<error-handler>
			<on-error-propagate enableNotifications="true"
				logException="true" doc:name="On Error Propagate" doc:id="488b507d-e26c-4c56-8759-8bb4f6645d71"
				type="ANY">
				<flow-ref doc:name="errorHandlingFlow" doc:id="afdaf73c-0137-4d60-84f6-5c41234771a3"
					name="errorHandlingFlow" />
			</on-error-propagate>
		</error-handler>
	</flow>
</mule>


        